# 🍽️ Mom's Kitchen - Food Ordering App

**Mom's Kitchen** is a user-friendly Android food ordering platform designed as if a restaurant built their own delivery app. It offers a smooth and engaging user experience with essential features like menu browsing, favorites, cart, and order history.

---

## 🚀 Key Features

- 🍕 **Category-Wise Browsing**: View delicious food items organized by different categories.
- ❤️ **Favorites Section**: Easily add or remove items to/from your favorites.
- 🛒 **Cart Management**: Add items to cart, update quantities, and place orders.
- 📜 **Order History**: Track previous orders with details like date, items, and receiver info.
- 📱 **Intuitive UI**: Clean interface with smooth navigation using bottom navigation and FAB.

---

## 🛠️ Technologies Used

- 🔐 **Firebase Authentication**: Secure user sign-up, login, email verification.
- 🔄 **Firebase Realtime Database**: Real-time syncing of menu, favorites, cart, and orders.
- 🎉 **Lottie Animation**: Lightweight vector animations for success/failure dialogs.
- 🖼️ **Picasso**: Efficient image loading and caching from Firebase URLs.
- 📍 **Google Location Services**: Autofills receiver address via location access.

---

## 📂 Project Structure

### 📁 Java Files (Frontend Logic)

<details>
  <summary><strong>Activities</strong></summary>

  - `MainActivity.java` – Launch screen and base for fragment loading  
  - `AddLocationDetailsActivity.java` – Form to enter delivery address  
  - `ForgotPasswordActivity.java` – Password reset via email  
  - `HomeActivity.java` – Hosts navigation bar and fragments  
  - `OrderHistoryDetailsActivity.java` – Shows past order details  
  - `OrderPageActivity.java` – Final order review page  
  - `PaymentMethodActivity.java` – Payment option selection  
  - `SignUpActivity.java` – User registration with validation  
  - `SplashScreenActivity.java` – App splash/loading screen  
</details>

<details>
  <summary><strong>Fragments</strong></summary>

  - `MenuFragment.java`  
  - `FavouritesFragment.java`  
  - `OrderHistoryFragment.java`  
  - `ProfileFragment.java`  
</details>

<details>
  <summary><strong>Adapters</strong></summary>

  - `FoodBoxAdapter.java`  
  - `FavouritesBoxAdapter.java`  
  - `OrderBoxAdapter.java`  
  - `OrderHistoryCartAdapter.java`  
  - `OrderHistoryDisplayAdapter.java`  
  - `AddressBoxAdapter.java`  
</details>

<details>
  <summary><strong>Data Models</strong></summary>

  - `FoodBoxData.java`  
  - `FavouritesData.java`  
  - `OrderData.java`  
  - `OrderHistoryCartData.java`  
  - `OrderHistoryDisplayData.java`  
  - `AddressData.java`  
  - `Users.java`  
</details>

---

### 📁 XML Files (UI Layouts)

<details>
  <summary><strong>Activity Layouts</strong></summary>

  - `activity_main.xml`  
  - `activity_sign_up.xml`  
  - `activity_forgot_password.xml`  
  - `activity_menu.xml`  
  - `activity_add_location_details.xml`  
  - `activity_order_page.xml`  
  - `activity_payment_method.xml`  
  - `activity_order_history_details.xml`  
  - `activity_select_location.xml`  
  - `activity_splash_screen.xml`  
</details>

<details>
  <summary><strong>Fragments</strong></summary>

  - `fragment_home.xml`  
  - `fragment_favourites.xml`  
  - `fragment_order_history.xml`  
  - `fragment_profile.xml`  
</details>

<details>
  <summary><strong>Custom UI Components</strong></summary>

  - `food_box.xml`  
  - `favourites_box.xml`  
  - `order_box.xml`  
  - `order_history_cart_box.xml`  
  - `order_history_display_box.xml`  
  - `address_box.xml`  
  - `confirmation_box.xml`  
  - `error_box.xml`  
  - `quantity_box.xml`  
  - `permission_box.xml`  
</details>

---

## 🙌 Contributing

Have ideas or improvements? Feel free to fork this repository and submit a pull request.

---

## 📌 Notes

This app is built as a self-learning and showcase project, aimed to simulate a real-world restaurant ordering system. It is **not a clone of Swiggy/Zomato**, but rather a personalized solution as if a restaurant built their own delivery app.

---

## 📷 Screenshots (Optional)

*Add GIFs or screenshots of your app UI here (menu, cart, order summary, etc.)*

---
